#version 440

layout(constant_id = 0) const uint SIZE = 2; // spec constants set to
// ridiculous values to
// ensure they are
// overwritten in main
layout(constant_id = 1) const uint GROUPSIZE = 1;

layout(local_size_x_id = 1, local_size_y = 1, local_size_z = 1) in;

layout(std430, set = 0, binding = 0) buffer system { vec4 data[SIZE]; };

layout(std430, set = 0, binding = 1) buffer stokes1 { float s1[SIZE]; };

layout(std430, set = 0, binding = 2) buffer stokes2 { float s2[SIZE]; };

layout(std430, set = 0, binding = 3) buffer stokes3 { float s3[SIZE]; };

float S1(vec4 v) { return 2 * ((v[0] * v[2]) + (v[1] * v[3])); }

float S2(vec4 v) { return 2 * ((v[0] * v[3]) - (v[1] * v[2])); }

float S3(vec4 v) {
  return ((v[0] * v[0]) + (v[1] * v[1])) - ((v[2] * v[2]) + (v[3] * v[3]));
}

void main() {
  uint i = gl_GlobalInvocationID.x;

  vec4 tmp = data[i];
  float norm = dot(tmp, tmp);
  s1[i] += S1(tmp) / norm;
  s2[i] += S2(tmp) / norm;
  s3[i] += S3(tmp) / norm;
}
